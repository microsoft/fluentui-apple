/// Autogenerated file

// swiftlint:disable all
import UIKit

import Stardust

extension App {

/// Entry point for the app stylesheet
public class DarkStyle: GenericStyle {

	public override class func shared() -> DarkStyle {
		 struct __ { static let _sharedInstance = DarkStyle() }
		return __._sharedInstance
	}
	//MARK: - DarkStyleExtendedEmptyListView
	override open func ExtendedEmptyListViewStyle() -> GenericStyle.ExtendedEmptyListViewAppearanceProxy {
		if let override = _ExtendedEmptyListView { return override }
			return DarkStyleExtendedEmptyListViewAppearanceProxy(proxy: { return Stardust.DarkStyle.shared() })
		}
	open class DarkStyleExtendedEmptyListViewAppearanceProxy: GenericStyle.ExtendedEmptyListViewAppearanceProxy {

		//MARK: - DarkStylecolorExtendedEmptyListView
		override open func colorStyle() -> GenericStyle.ExtendedEmptyListViewAppearanceProxy.colorAppearanceProxy {
			if let override = _color { return override }
				return DarkStylecolorExtendedEmptyListViewAppearanceProxy(proxy: mainProxy)
			}
		open class DarkStylecolorExtendedEmptyListViewAppearanceProxy: GenericStyle.ExtendedEmptyListViewAppearanceProxy.GenericStylecolorAppearanceProxy {
		}

	}
	//MARK: - MessagingElementColor
	public static let MessagingElementColor = MessagingElementColorAppearanceProxy()
	open class MessagingElementColorAppearanceProxy {
		public let mainProxy: () -> GenericStyle
		public init(proxy: @escaping () -> GenericStyle) {
			self.mainProxy = proxy
		}

		//MARK: incomingMessageBackground 
		public var _incomingMessageBackground: Int?
		open func incomingMessageBackgroundProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> Int {
			if let override = _incomingMessageBackground { return override }
			return Int(1)
			}
		public var incomingMessageBackground: Int {
			get { return self.incomingMessageBackgroundProperty() }
			set { _incomingMessageBackground = newValue }
		}
	}

}
}